Developers guide to SAML Workings 0-0-0-

 -0 SASL
----------------
  > Security Assertion Markup Language
  > usedfor Web SSO
  > an app frameowrk to generalize authentication
  > SASL is used by app protocols like IMAP, POP & XMPP
  > effect is to modularize authentication, s.t. newer authentication mechanisms can be added as needed

0-0-0 SAML Specs 0-0-0
+ Assertions - tokens to tranfer user identity info in the messages
+ Protocols  - Types of Request & Response messages
+ Bindings   - COmmunication method to transport the messages
+ not relevant to Web Services communication


0-0-0 Protocols 0-0-0
+ Authentication Request
+ Single Logout
+ Artifact Resolution
+ Name Identifier Management


0-0-0 Binding 0-0-0
+ how SAML messages are transmitted from one system entity to another
+ can be HTTP
> HTTP Redirect
> HTTP POST
> HTTP artifact
+ can be SOAP
+ 

0-0-0 Profiles 0-0-0
+ define the UseCases for for Web SSO
+ Combination of protocols, assertions & bindings that are used to create a federation
+ Browser Artifact - SOAP based - known as SOAP Back Channel
+ Browser POST
+ Web Browser SSO
+ Single Logout
+ Name Identifier Management
+ Identity Provider Discovery
 

-0- STS & SAML Assertion
-------------------------
  > SAMLAssertion's Subject's confirmation methods can be correlated with STS
  > subject confirmation methods are not defined in SAML core
  > SAML Profile specs define the below 3 subject confirmation methods
  > > Holder Of Key (HOK)
  > > Bearer
  > > Send Vouches (SV)

-0- SAML & Web Services
--------------------------
  > standardized in the context of SAML token profile
  > https://www.oasis-open.org/committees/download.php/16768/wss-v1.1-spec-os-SAMLTokenProfile.pdf
  
-0- WS Security Policy UseCases
----------------------------------
  > http://docs.oasis-open.org/ws-sx/security-policy/examples/ws-sp-usecases-examples.html

-0- WS-Trust STS
---------------------
  > introduces a runtime component called STS
  > STS will act as an intermediary between SP & IDP
  > this has advantages to the direct trust relationship between SP & IDP
  > STS can issue tokens based on requirements from IDP &/or SP
  > > requirements of IDP are specified in a WS-Policy or out of band agreement

-0- STS & Web Service Consumer
--------------------------
  > consumer need not know various types of token required by IDP
  > web service consumer sends request to STS providing the requirements of the client as well as IDP
  > once consumer receives token from STS, it attaches the same to outgoing SOAP message meant for IDP

-0- STS jargon - TokenType
---------------------
  > type of security token requested
  > security token can be SAML 1.1, 2.0, X.509, etc
  > URIs are defined for all standard security tokens

-0- STS jargon - KeyType
---------------------------
  > Public, Symmetric, Bearer
  > each has a URI defined
  > PK & SK are good even if SAML token is in possession of wrong hands
  > Bearer is not good for above case i.e. man-in-the-middle
  > Combine Bearer with HTTPS

-0- STS jargon - Claims
-----------------------------
  > specifies required & optional claims
  > claim can be
  > > email address, role, information, country, etc

-0- STS jargon - Applies To
------------------------------
  > specifies the scope for which the token is required
  > can be the URL of the SP - Service Provider

-0- STS jargon - Lifetime
------------------------------
  > specifies the creation & expiration of token

-0- STS jargon - Claims
------------------------
  > maps to a SAML attribute statement

-0- STS & IDP - Trust
---------------------------
  > via certificate
 
-0- STS & KeyType <=> ConfirmationMethod
-----------------------------------------
  > PK or SK <=> HOK
  > Bearer <=> Bearer

-0- STS & ConfirmationMethod
---------------------------------
  > Bearer & HOK widely used in all STS usecases
  > Bearer & HOK widely used in WS FED Passive Requestor Profile
  > Bearer & HOK widely used in SAML Post Profile

-0- 







-0- STS - Claims encoded as SAML Attribute Statement
------------------------------------------------------
  > http://docs.oasis-open.org/imi/identity/v1.0/identity.html



















 -0 Understanding Mutual SSL Types
----------------------------------
  > mutual SSL through Proxy without a tunnel may be good
  > mutual SSL via a tunnel may not be clean











Reference:
1/ http://owulff.blogspot.in/2012/02/saml-tokens-and-ws-trust-security-token.html
