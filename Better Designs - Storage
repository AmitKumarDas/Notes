
-0 MySQL
-------------------
  > Fast enough, disk based, robust
  > Big & static data in MySQL

 -0 Redis
------------------
  > Super fast
  > RAM based
  > fragile
  > small & dynamic data into Redis


-0- Cloudstack
  
  > composed of 2 parts
  > management server & server resource
  > management server - business logic
  > server resource - translation layer to talk to hardware

-0- Cloudstack & Management Server
----------------------------------
  > Business Logic
  >> Service Offering,
  >> Account
  >> acl
  >> usage

-0- Cloudstack & GLUE to 2 parts
  
> JSON - API glue between management & server layer
  > Server Resource can be in any language .. not necessarily in Java
  > Server resource can be remotely deployed from management server
  > Server resource doesnot have access to management datastore
  > Server resource resides in a Agent Container when deployed remotely

-0- Cloudstack Agent Container

  > deploys Server Resource if deployed remotely
  > handle protocol issues
    > communicating via firewall
    > serializing/ deserializing
    > security

-0- CLoudstack REST API
  > categorized as -> synchronous, asynchronous & asynchronous create
  > broken into 2 APIs: End User API & OAM&P API
  > OAM&P - Ops, Admin, Maintainence & Provisioning = Admin API



-0-  FTP Data Transfer can be done in any of three modes:
   
> Stream mode: Data is sent as a continuous stream, 
          Relieving FTP from doing any processing. 
          Rather, all processing is left up to TCP. 
          No End-of-file indicator is needed, unless the data is divided into records.

> Block mode: FTP breaks the data into several blocks 
          (block header, byte count, and data field) and then passes it on to TCP.

> Compressed mode: Data is compressed using a single algorithm (usually run-length encoding).

