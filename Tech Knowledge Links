InvokeDynamic
-----------------
- jooflux - http://arxiv.org/pdf/1210.1039.pdf
- Bitescript n Jitescript
- ASM pdf
- Dyn.js
- method Dispatching using indy -
http://www.ec-spride.tu-darmstadt.de/media/ec_spride/secure_software_engineering/theses_1/kamil_erhard_master_thesis.pdf
- http://www.bodden.de/pubs/bodden12invokedynamic.pdf
- http://cr.openjdk.java.net/~briangoetz/lambda/lambda-translation.html
- golo
- http://www.ec-spride.tu-darmstadt.de/media/ec_spride/secure_software_engineering/theses_1/kamil_erhard_master_thesis.pdf
- http://www.bodden.de/pubs/bodden12invokedynamic.pdf
- https://github.com/melix/groovy-bytecode-ast/wiki

 GC
--------
- https://blogs.oracle.com/jonthecollector/entry/the_second_most_important_gc
- https://weblogs.java.net/blog/emcmanus/archive/2006/11/a_real_example.html


Annotation Processing
----------------------
- Dagger DI


AOP
----------
- http://docs.oracle.com/javase/6/docs/api/java/lang/instrument/package-summary.html
- http://jonasboner.com/publications/JVM_AOP_AOSD2006.pdf
- Clustering & JVM - http://jonasboner.com/publications/AOSD_2007_Final.pdf
- http://java.dzone.com/news/socket-monitoring-now-using
- http://java.dzone.com/articles/implementing-build-time
- https://github.com/oblac/jodd/tree/master/jodd-proxetta
- http://theholyjava.wordpress.com/2011/09/07/practical-introduction-into-code-injection-with-aspectj-javassist-and-java-proxy/
- http://kamranzafar.org/weblog/2009/04/03/regex-based-spring-aop-auto-proxy-creator/

Caching
---------
- The weak references are good for caching purposes as they are eligible for collecting by GC
- - despite the fact they are still accessible from the map instance.
- Note that the WeakHashMap wouldn’t be a good candidate for this purpose 
- - as it makes a weak references to the map keys, not values in which we’re interested in.
- https://weblogs.java.net/blog/2006/05/04/understanding-weak-references

  JavaScript
------------------
 > http://code.google.com/p/selenium/wiki/JsonWireProtocol
 > http://code.google.com/p/selenium/wiki/WebDriverJs
 > github.com/substack/stream-handbook
 > http://css.dzone.com/articles/why-asmjs-big-deal-game
 > http://asmjs.org/spec/latest/
 > http://www.w3.org/TR/WebCryptoAPI/  
  > Object.observe
  > ES.Next classes
  > ES.Next modules
 > https://dvcs.w3.org/hg/html-media/raw-file/tip/encrypted-media/encrypted-media.html
 > http://www.w3.org/TR/media-source/




  Taming Callbacks
----------------------
  > Promises
  > narrative.js
  > stratified.js
  > streamline.js
  
  Threads & Now Green Threads
-----------------------------
  > Er.js, Fibers, Threads.js, 
  










