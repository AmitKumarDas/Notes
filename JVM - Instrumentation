 - http://asm.ow2.org/current/asm-transformations.pdf
 - http://asm.ow2.org/current/asm-eng.pdf
 - http://code.google.com/p/java-allocation-instrumenter/
 - http://mchr3k.github.io/org.inmemprofiler/

 Profiling with Signals
------------------------------------
 - There is an undocumented JVMTI call in OpenJDK that allows you to get a stack trace from a running thread, 
 - - regardless of the state of that thread. 
 - In Unix-like systems, you can use a SIGPROF signal to call this function at (semi-)regular intervals, 
 - - without having to do anything to your code. 

 - Remember - A Running Thread, not any other scheduled thread etc
 - A scheduled thread i.e. a thread that has exited the blocking calls are not running

 Profiler -sans- JIT decisions
---------------------------------
 - profiling that doesnot interfere JIT decisons
 - AsyncGetCallTrace does exactly this
 - - you dont call it from your code
 - - it doesnot wait for a safepoint
 - - it doesnot change your code
 - - JIT doesnot care








References:
--------------
1/ http://jeremymanson.blogspot.in/search?updated-min=2010-01-01T00:00:00-08:00&updated-max=2011-01-01T00:00:00-08:00&max-results=5
