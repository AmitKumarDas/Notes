 Reflection based invokeStatic & invoke
-------------------------------------------
 - https://github.com/pidster-dot-org/java-agent-bootstrap/
 - - blob/master/src/main/java/org/pidster/java/lang/instrument/Reflector.java

 - Instantiating via ClassName, ClassLoader & Constructor Args
 --------------------------------------------------------------
 - look @ above Reflector @ java-agent-bootstrap/
 
 
 - Invoking via Target, MethodName & Method Args
 --------------------------------------------------
 - look @ above Reflector @ java-agent-bootstrap/
 
 
 - Invoking via ClassName, ClassLoader, MethodName, Method Args
 -------------------------------------------------------------
 - look @ above Reflector @ java-agent-bootstrap/
 - this shows how invokeStatic is done via reflection
 
 
 
  Thread or Runnable 
 -----------------------
  Thread t;
  Class<?> c = cl.loadClass(threadClass);
  
 if (Thread.class.isAssignableFrom(c)) {
   Class<? extends Thread> tc = c.asSubclass(Thread.class);
   t = tc.newInstance();
 }
 
 if (Runnable.class.isAssignableFrom(c)) {
  Class<? extends Runnable> rc = c.asSubclass(Runnable.class);
  Runnable r = rc.newInstance();
  t = new Thread(r);
 }
 
 
 - xx.class.isAssignableFrom
 - c.asSubclass
 - newInstance
 
 
 
 
