
 http://java8blog.com/post/37385501926/fixing-checked-exceptions-in-java-8

 - Getting rid of try catch -
 ---------------------------------
 try {
        uri = new URI(requestUri);
    } catch (URISyntaxException e) {
        throw new RuntimeException(e);
    }
    
 - Fixed Code -
 ---------------
 - Just propagate
 - URI uri = Throwables.propagate(() -> new URI(requestUri));
 
 - // or wrap to a new exception
 - URI uri = Throwables.propagate(() -> new URI(requestUri), 
                                   IllegalArgumentException::new);
 
 - // or wrap to a new exception & customized message
 - URI uri = Throwables.propagate(() -> new URI(requestUri), 
                                   (e) -> new IllegalArgumentException("Unable to Parse Request URI!", e));

 - The Code -
 -----------------
 
 public class Throwables {
    public static interface ExceptionWrapper<E> {
        E wrap(Exception e);
    }

    public static <T> T propagate(Callable<T> callable) throws RuntimeException {
        return propagate(callable, RuntimeException::new);
    }

    public static <T, E extends Throwable> T propagate(Callable<T> callable, ExceptionWrapper<E> wrapper) throws E {
        try {
            return callable.call();
        } catch (RuntimeException e) {
            throw e;
        } catch (Exception e) {
            throw wrapper.wrap(e);
        }
    }
 }
 
 - Question - Why Callable ?
 
 
