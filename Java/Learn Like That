 - Netty -
 -------------
 - HttpRequest, ChannelBufferInputStream, HttpResponse 
 
 - Google Common -
 ----------------------
 - Preconditions, collect.Maps
 
 - Finagle -
 ------------------
 - ServiceUtils
 
 - RestEasy -
 ------------------
 - FormUrlEncodedProvider, spi.AsynchronousResponse, Encode, Dispatcher
 
 - javax.ws.rs
 -------------------
 - HttpHeaders , MultiValueMap, UriInfo
 
 - twitter -
 ----------------
 - util.Future, util.Promise
 
 - javax.annotation -
 ------------------------
 - Nullable

 - java concurrency -
 ----------------------
 - ExecutorService, CompletionService, Executors
 
 - Parallel n Sequential -
 --------------------------
 - CachedThreadPool - parallel, reuse & remove
 - SingleThreadExecutor - sequential
 - FixedThreadPool - wait in queue
 
 - Schedule to Future - 
 --------------------------
 - ScheduledThreadPool - schedule future task
 - SingleThreadScheduledPool - 1 thread to schedule future task
 
 - Too much Futures -
 -----------------------
 - Try CompletionService
 
 - Webbit -
 -------------------------------
 - Single threaded non blocking server
 
 - High Available -
 ----------------------
 - netty servers behind a load balancer
 
 - Session Store Replication -
 --------------------------------
 - embed Hazelcast or infinispan
 
 - HA Web Framework & HTTP Server -
 -------------------------------------
 - xitrum
 
 - Vert.x -> Clustering without Membership -
 -------------------------------------
 - via Distributed Cache using Hazelcast
 - distributed cache + event listeners on cache
 - distributed cache tracks the members of the cluster & caches the info locally
 
 - Vert.x Clustering & Node Communication -
 -------------------------------------
 - vert.x uses its own protocol for node communication
 
 - https://code.google.com/p/json-path/ -
----------------------------------------------
 - same as xpath, this is for JSON
 
 - Clustering SANS Master Node -
 -----------------------------------
 - ideas of Dynamo .. Gossip Protocol ... heartbeats .. 
 
 - Invoke func of a Shared Library/DLL -
 --------------------------------------
 - JNA
 
 - Windows Specific DLLs -
 -------------------------------
 - user32.dll, kernel32.dll
 
 - JNA vs JNI vs LIBFFI -
 -------------------------
 - JNA uses JNI to access LIBFFI
 
 - Ruby Native Extensions -
 ----------------------------
 - shared libs - loaded by Ruby process - can access Ruby interpreter
 - e.g. can use above thoughts to determine code covergae for a test run
 
 - JANerator -
 -----------------
 - generate Java mapping from C header files

 - JEPs -
 ----------
 101 Generalized Target-Type Inference
 104 Annotations on Java Types
 107 Bulk Data Operations for Collections
 109 Enhance Core Libraries with Lambda
 115 AEAD CipherSuites
 118 Access to Parameter Names at Runtime
 119 javax.lang.model Implementation Backed by Core Reflection
 120 Repeating Annotations
 123 Configurable Secure Random-Number Generation
 126 Lambda Expressions & Virtual Extension Methods
 161 Compact Profiles
 162 Prepare for Modularization
 171 Fence Intrinsics
 174 Nashorn JavaScript Engine
 176 Mechanical Checking of Caller-Sensitive Methods
 178 Statically-Linked JNI Libraries
 179 Document JDK API Support and Stability
 184 HTTP URL Permissions
 155 Concurrency Updates
 
 - Security Issues in XML APIs -
 ------------------------------------
 185 JAXP 1.5: Restrict Fetching of External Resources
  
 - Security Enhancements -
 -----------------------------
 JEP 140 Limited doPrivileged
 JEP 180 Handle Frequent HashMap Collisions with Balanced Trees
 
 - Dynamic Discovery -
 -----------------------------------
 - Zookeeper - registry - info about available services 
 
 - R2 -
 ---------
 - REST transport layer in jAVA - over Netty 
 
 
 - Dynamic Discovery -
 ---------------------------
 - D2 of RestLi
 
 - REST & Netty's HTTP -
 -------------------
 - R2 of RestLi
 
 - Making API Request -
 -------------------------
 - http://...?xyz=abc&apikey=.....&signature=....
 - signature contains the signature hash to authenticate the user account executing the API command
 
 - REST API - Security -
 ---------------------------
 - Provider need to give the API Key & 
 - Client to provide its Secret Key to Provider
 
 - REST API & Throttling -
 ----------------------------
 - refer to Cloudstack
 
 - REST API & Max Pages to be Returned -
 ------------------------------------------
 - refer cloudstack
 
 - REST API & Asynchronous -
 ------------------------------
 - refer cloudstack
 
 - Scalable Apps -
 ------------------------------------
 - Spring Data Gemfire
 
 - REST API & Billing/Usage -
 --------------------------------
 - refer cloudstack
 
 - HttpClient's GetMethod & org.json.JSON -
 -------------------------------------------
 - JSONObject response = new JSONObject(
                             new JSONTokener(
                             new InputStreamReader(
                             get.getResponseBodyAsStream())));
 
 - Mutual Auth & CLIENT-CERT -
 -------------------------------- 
 - CLIENT-CERT in web.xml & clientAuth=false in connector allows for re-negotiation & also doesnot cause unncessary prompts
 - realm will be certificate & not tomcat-users
 
 - Assume Immutability In Design -
 ----------------------------------
 - this will make life simple, inherently thread safe, can be shared freely, makes great building blocks for other objects
 
 - Achieving Immutability in Java -
 -----------------------------
 - Separate object for each distinct value
 
 -How to get Immutability -
 --------------------------
 - all fields & class as final
 - all mutators should return a new THIS
 
 - JavaScript Redirect -
 -----------------------------
 - Set the HttpResponse headers for Pragma, Expires, CacheControl, ContentType
 - Set the writer of HttpResponse with HTTP-EQUIV Expires & Pragma
 - Set the writer of HttpResponse with <script language='javascript'>
 - & set the window.top.location.href = new path
 
 - Java 2 Type s -
 ----------------------
 - Primitive --> int, double, boolean ..
 - Reference --> String, List, Object ...
 
 - Integer Comparision -
 --------------------------
 - IntegerA < IntegerB //forces auto unboxing
 
 - Integer Equality -
 -------------------------
 - IntegerA == IntegerB //No auto unboxing. Performs identity comparison
 
 - == with boxed primitives -
 -------------------------
 - never do it
 
 - Caching & Immutable -
 ----------------------------
 - Do caching.. use google guava classes
 
 - JAX-RS 2 & JSON-P -
 ----------------------
 - json based java objects can be converted to json representation & vice versa
 - org.glassfish.javax.json.1.0
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
