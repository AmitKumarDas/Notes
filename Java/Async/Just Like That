
 - Old Way - Multiple --> Futures & Callables -
 -----------------------------------
 - collection of data to be executed parallely
 - Executors.xxx()
 - List<Future<String>> etc.. i.e. a collection
 - Iterate over the collection & capture the Futures
 - do a future.get() over the iter of futures
 
 - Issues in above -
 ----------------------
 - if first future is slowest one
 - can we sort from fastest future to slowest future
 
 - ExecutorCompletionService -
 ---------------------------------
 - Solves above ... returns the fastest completed future first..
 
 - CompletionService Issues -
 ---------------------------------
 - How to process the incoming results parallely
 
 
 
 
 
