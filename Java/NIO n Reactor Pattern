 - Reactor -
 --------------
 - responds to IO events
 - & dispatches to the appropriate handler
 
 - Handlers - 
 ------------------
 - perform non-blockign actions
 - these have to be bind to the events
 
 - Reactor -to- NIO -
 -----------------------
 - Channel - support non blocking reads
 - Buffers - can be read or written by Channels
 - Selectors - tell which set of Channels have IO events
 - SelectionKeys - maintain IO event status & bindings
 
 - Tips - Build NIO Server -
 ----------------------------
 - ServerSocketChannel - on which we accept connections
 - Selector - which will be monitored
 - ByteBuffer - into which we'll read data when available
 - Selector - create one via SelectorProvider
 - ServerSocketChannel - open it
 - ServerSocketChannel - open -> configure -> bind -> register with selector
 - ServerSocketChannel - register selector with ACCEPT ing connection
 
 - Tips - Server Run -
 ----------------------
 - While Loop
 - Check pending requests to server
 - - Get the Key based on Selector
 - - Change the Key interest based on pending request
 - Selector - select
 - Selectedkeys - Iterate
 - SelectedKey - Remove
 - Key - isValid ?
 - Key - isAcceptable ? or isReadable ? or isWritable?
 - Key - Accept Connection OR
 - Key - Read OR
 - Key - Write
 
 - Tips - Accept Conn -
 ----------------------------
 - get Server Socket Channel
 - get socket channel
 - configure blocking to false
 - register the selector with OP_READ
 
 - Tips - read -
 ----------------------
 - get SocketChannel
 - clear the read buffer
 - read from socketchannel to readbuffer
 - if properly read then close the channel
 - if properly read then cancel the key
 - if IOException then close the channel
 - if IOException then cancel the key
 - hand the read buffer to a worker thread
 
 - Tips - Worker -
 ---------------------
 - A runnable
 - uses a queue
 - Accepts data, channel, nio server & count of data
 - data is wrapped into an Event & pushed into the queue
 - queue is notified
 - run method runs in a loop
 - run method handles the data
 - run method makes a WRITE request to Server
 
 - Tips - Write Request to Server -
 -------------------------------
 - list of change requests
 - map of SocketChannel with List<Data>
 - populate the above instances
 - wake up the selector so that it not ONLY listens to accept & read but also write
 
 - Tips - Write -
 ---------------------
 - get the data from the socketchannel
 - iterate the data
 - typecast to bytebuffer
 - write the bytebuufer to socketchannel
 - once all data written to socket, switch to OP_READ
 
 - Tips - Build NIO Client -
 --------------------------------
 - 


References:
-------------
1/ http://gee.cs.oswego.edu/dl/cpjslides/nio.pdf
2/ http://rox-xmlrpc.sourceforge.net/niotut/

