

Tenured Generation Pool
-----------------------------
  > objs surviving the young generation migrate to tenured
  > -Xmx - the max memory to be used in Tenured Generation

  Young Gen
---------------
  > lots & lots of garbage in it
  > normally a copy collector

  Tenured Gen
-----------------
  > longer lived objs
  > normally mark & sweep collector


  NewRatio
---------------
  > a ratio of 2 means
  > = Tenured Generation Size is 2/3 of Total heap size
  > = Young Generation Size is 1/3 of Total heap size

  Aliter of Newratio
-------------------------
  > NewSize & MaxNewSize refers to Young Gen sizes

  If Young & Tenured Gen is FULL
-----------------------------------
  > lets say young & tenured gen is over flowing with long lived data
  > So, Minor GC cannot be done successfully
  > Hence, a Major GC will be done
  > However, all the next collections will be Major GCs only
  > increasing the NewRatio might help

 Increasing NewRatio
-----------------------
  > Will increase the TenuredGen Size & decrease Young Gen
  > Lets say if its 5
  > Then TenuredGen = 5/6 & YoungGen = 1/6 ; of total Heap Space
  > Will be ok for overflowing & mostly filled Tenured Gen apps

  App with Higher Threads
--------------------------
  > Might be allocating with higher rate
  > so a large Young Gen may be appropriate
  > NewSize & MaxNewSize will give precise control over Young Gen

  Default NewRatio Values
--------------------------
  > is platform & runtime compiler (JIT) dependent

  CMS Initial Mark & Concurrent Mark
---------------------------------------
  > initial mark completes then concurrent mark starts
  > concurrent mark can be interrupted by Young Gen collections .. remember thread & concurrency
  > Initial mark is a Stop The World phase
  > CMS concurrent YIELDs to Young Gen collection


  Example
-------------
[GC [1 CMS-initial-mark: 463236K(515960K)] 464178K(522488K), 0.0018216 secs] [Times: user=0.01 sys=0.00, real=0.00 secs]
Explained Below
[GC [1 CMS-initial-mark: oc--OG(tot-OG)]  oc-Y+OG(tot-Y+OG), dur-MarkInit] [Times: user=0.01 sys=0.00, real=0.00 secs]

  > oc - occupied
  > tot - total
  > dur - duration
  > Initial mark is a STW

  Example
-------------
[GC[ParNew: 6528K->702K(6528K), 0.0130227 secs] 469764K->465500K(522488K), 0.0130578 secs] [Times: user=0.05 sys=0.00, real=0.01 secs]
[GC[ParNew: oc-YG->oc-YG(tot-YG), pause duration] oc-Y&OG->oc-Y&OG(tot-HS), dur-ParNew] [Times: user=0.05 sys=0.00, real=0.01 secs]

  > ratio - usr/real = 0.05/0.01 = spped up u r getting from ParNew collection
  > sys time - system activity indicator - that is slowing down the collection
  > If paging is happening - sys will be high
  > HS - Heap Space


  Memory Pool
---------------------
  > tenured generation pool - a good one to monitor
  
  
  
